import streamlit as st
import pandas as pd
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
from io import BytesIO

# Thi·∫øt l·∫≠p Google Sheets API
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(st.secrets["gcp_service_account"], scope)
client = gspread.authorize(creds)

# M·ªü Google Sheet
spreadsheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1vVwCCoKCuRZZLx6QrprgKM8b067F-p8QKYVbkc1yavo")

# ƒê·ªçc d·ªØ li·ªáu t·ª´ c√°c sheet
df_xe = pd.DataFrame(spreadsheet.worksheet("Xe").get_all_records())
df_lich = pd.DataFrame(spreadsheet.worksheet("L·ªãch b·∫£o d∆∞·ª°ng ti·∫øp theo").get_all_records())
df_ls = pd.DataFrame(spreadsheet.worksheet("L·ªãch s·ª≠ b·∫£o d∆∞·ª°ng").get_all_records())

# Thi·∫øt l·∫≠p giao di·ªán
st.title("üìã Tra c·ª©u l·ªãch s·ª≠ v√† l·ªãch b·∫£o d∆∞·ª°ng xe")

# Bi·ªÉn s·ªë ch·ªçn ·ªü tr√™n ƒë·∫ßu, c√≥ t√¨m ki·∫øm
bien_so = st.selectbox("üîç Ch·ªçn bi·ªÉn s·ªë xe", sorted(df_xe["Bi·ªÉn s·ªë"].unique()))

# Hi·ªÉn th·ªã th√¥ng tin xe
st.subheader("üìå Th√¥ng tin xe")
st.table(df_xe[df_xe["Bi·ªÉn s·ªë"] == bien_so])

# Hi·ªÉn th·ªã l·ªãch b·∫£o d∆∞·ª°ng ti·∫øp theo
st.subheader("üìÖ L·ªãch b·∫£o d∆∞·ª°ng ti·∫øp theo")
lich_tiep = df_lich[df_lich["Bi·ªÉn s·ªë"] == bien_so]
if not lich_tiep.empty:
    du_kien = lich_tiep.iloc[0]["D·ª± ki·∫øn l·∫ßn ti·∫øp theo"]
    goi_y = lich_tiep.iloc[0]["G·ª£i √Ω n·ªôi dung"]
    st.info(f"**D·ª± ki·∫øn l·∫ßn ti·∫øp theo:** {du_kien}\n\n**G·ª£i √Ω n·ªôi dung:** {goi_y}")
else:
    st.warning("Ch∆∞a c√≥ l·ªãch b·∫£o d∆∞·ª°ng ti·∫øp theo")

# Hi·ªÉn th·ªã l·ªãch s·ª≠ b·∫£o d∆∞·ª°ng
st.subheader("üßæ L·ªãch s·ª≠ b·∫£o d∆∞·ª°ng")

# L·ªçc theo kho·∫£ng th·ªùi gian
col1, col2, col3 = st.columns([1, 1, 1])
with col1:
    tu_ngay = st.date_input("üìÜ T·ª´ ng√†y", value=None)
with col2:
    den_ngay = st.date_input("üìÜ ƒê·∫øn ng√†y", value=None)
with col3:
    if st.button("Xem"):
        if tu_ngay and den_ngay:
            if tu_ngay > den_ngay:
                st.error("‚ùå T·ª´ ng√†y ph·∫£i nh·ªè h∆°n ho·∫∑c b·∫±ng ƒë·∫øn ng√†y. Vui l√≤ng ch·ªçn l·∫°i.")
            else:
                df_locs = df_ls[
                    (df_ls["Bi·ªÉn s·ªë"] == bien_so) &
                    (pd.to_datetime(df_ls["Ng√†y"], dayfirst=True) >= pd.to_datetime(tu_ngay)) &
                    (pd.to_datetime(df_ls["Ng√†y"], dayfirst=True) <= pd.to_datetime(den_ngay))
                ]
                st.dataframe(df_locs, use_container_width=True)
                # T·ªïng chi ph√≠
                if not df_locs.empty:
                    try:
                        df_locs["Chi ph√≠"] = pd.to_numeric(df_locs["Chi ph√≠"], errors='coerce')
                        tong = df_locs["Chi ph√≠"].sum()
                        st.success(f"üí∞ **T·ªïng chi ph√≠:** {tong:,.0f} VND")
                    except:
                        st.warning("Kh√¥ng th·ªÉ t√≠nh t·ªïng chi ph√≠ do d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá.")
        else:
            df_locs = df_ls[df_ls["Bi·ªÉn s·ªë"] == bien_so]
            st.dataframe(df_locs, use_container_width=True)
            if not df_locs.empty:
                try:
                    df_locs["Chi ph√≠"] = pd.to_numeric(df_locs["Chi ph√≠"], errors='coerce')
                    tong = df_locs["Chi ph√≠"].sum()
                    st.success(f"üí∞ **T·ªïng chi ph√≠:** {tong:,.0f} VND")
                except:
                    st.warning("Kh√¥ng th·ªÉ t√≠nh t·ªïng chi ph√≠ do d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá.")

# Xu·∫•t Excel
if st.button("üì§ Xu·∫•t Excel l·ªãch s·ª≠ b·∫£o d∆∞·ª°ng"):
    df_export = df_ls[df_ls["Bi·ªÉn s·ªë"] == bien_so]
    output = BytesIO()
    with pd.ExcelWriter(output, engine='xlsxwriter') as writer:
        df_export.to_excel(writer, index=False, sheet_name='L·ªãch s·ª≠ b·∫£o d∆∞·ª°ng')
    output.seek(0)
    st.download_button(
        label="T·∫£i file Excel",
        data=output,
        file_name=f"Lich_su_bao_duong_{bien_so}.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
